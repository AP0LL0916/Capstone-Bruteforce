from colorama import Fore, Back, Style
import os
import time
import itertools
import string

def clear():
    if name == 'nt':
        _ = system('cls')

    else:
        _ = system('clear')

    return

def bruteforce():
        
    # This will be the function that will take the password generated by the randomizer and test it against the password file that needs to be cracked.

    # Will most likely have system commands to interact with password protected file
    return

def incremental():
    # This function will be responsible for generating unique passwords while
    # keeping track so it doesnt repeat itself.
    # This function must also be able to take parameters like the minimum password
    # length and maximum password length
    return

def wordlist():
    # This function will be responsible for using password files and wordlists and
    # testing them against password protected files
    return

def options():
    # This function will ask user whether they brute forcing WPA handshakes or
    # zip protected files
    print("\n\n")
    print(Fore.MAGENTA + "Please choose what type of files you wish to brute force" )
    print(Fore.CYAN + "1.) ", Fore.RED + "Password Protected Files ")
    print(Fore.CYAN + "2.) ", Fore.RED + "WPA handshake PCAP Files ")
    print(Fore.CYAN + "99.) ", Fore.RED + "to exit out of program ")
    print()    
    fOption = input(Fore.GREEN + "Bruteforce:options" + Fore.RED + ">")
    
    if fOption == '1':
        fileOptions()
    if fOption == '2':
        wpaOptions()
    if fOption == '99':
        exit()
def fileOptions():
    print("\n\n")
    print(Fore.MAGENTA + "Please choose what type of brute forcing you intend to do" )
    print(Fore.CYAN + "1.) ", Fore.RED + "Incremental ")
    print(Fore.CYAN + "2.) ", Fore.RED + "Wordlists ")
    print(Fore.CYAN + "99.) ", Fore.RED + "return to main menu")
    print()

    hackOption = input(Fore.GREEN + "Bruteforce:Cracking Method" + Fore.RED + "> ")
    
    if hackOption == '1':
        incremental()
    if hackOption == '2':
        wordlists()
    if hackOption == '99':
        options()
    # If user picked zip protected files they will be brought to this function
    # to decide whether they want to do incremental encryption or wordlist
    # cracking
    


    return

def wpaOptions():
    # WIP
    return

def mainMenu():
    # initializes everything

    a = "   ____          ___               __          \n"
    b = "  /  _/______   / _ )_______ ___ _/ /_____ ____\n"
    c = " _/ // __/ -_) / _  / __/ -_) _ `/  '_/ -_) __/ \n"
    d = "/___/\__/\__/ /____/_/  \__/\_,_/_/\_\|__/_/    \n"
    n = a + b + c + d

    toolName = n.center(100, " ")
    print(Fore.WHITE + toolName)

    welcomeMessage = Fore.MAGENTA + " " + Fore.YELLOW + "a python bruteforce tool "
    Version = Fore.MAGENTA + "Ver: " + Fore.YELLOW + " 1.0.0"
    Github = Fore.MAGENTA + "Github: " + Fore.YELLOW + "https://github.com/AP0LL0916/Capstone-Bruteforce "

    welM = welcomeMessage.center(70, " ")
    Ver = Version.center(70, " ")
    Git = Github.center(70, " ")

    print(Fore.RED + "[---]", Fore.BLUE + welM, Fore.RED + "[---]")
    print(Fore.RED + "[---]", Fore.BLUE + Ver, Fore.RED + "[---]")
    print(Fore.RED + "[---]", Fore.BLUE + Git, Fore.RED + "[---]")

    options()

mainMenu()
